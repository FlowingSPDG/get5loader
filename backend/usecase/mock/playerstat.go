// Code generated by MockGen. DO NOT EDIT.
// Source: playerstat.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"

	entity "github.com/FlowingSPDG/get5loader/backend/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockPlayerStat is a mock of PlayerStat interface.
type MockPlayerStat struct {
	ctrl     *gomock.Controller
	recorder *MockPlayerStatMockRecorder
}

// MockPlayerStatMockRecorder is the mock recorder for MockPlayerStat.
type MockPlayerStatMockRecorder struct {
	mock *MockPlayerStat
}

// NewMockPlayerStat creates a new mock instance.
func NewMockPlayerStat(ctrl *gomock.Controller) *MockPlayerStat {
	mock := &MockPlayerStat{ctrl: ctrl}
	mock.recorder = &MockPlayerStatMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPlayerStat) EXPECT() *MockPlayerStatMockRecorder {
	return m.recorder
}

// BatchGetPlayerStatsByMapstat mocks base method.
func (m *MockPlayerStat) BatchGetPlayerStatsByMapstat(ctx context.Context, mapstatIDs []entity.MapStatsID) (map[entity.MapStatsID][]*entity.PlayerStat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchGetPlayerStatsByMapstat", ctx, mapstatIDs)
	ret0, _ := ret[0].(map[entity.MapStatsID][]*entity.PlayerStat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchGetPlayerStatsByMapstat indicates an expected call of BatchGetPlayerStatsByMapstat.
func (mr *MockPlayerStatMockRecorder) BatchGetPlayerStatsByMapstat(ctx, mapstatIDs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchGetPlayerStatsByMapstat", reflect.TypeOf((*MockPlayerStat)(nil).BatchGetPlayerStatsByMapstat), ctx, mapstatIDs)
}
